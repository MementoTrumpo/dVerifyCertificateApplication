// UploadCertificate.tsx
import { useState } from "react";
import { issueCertificate } from "../api/CertificateAPI";
import { toast } from "react-toastify";

export default function UploadCertificate() {
  const [ipfsHash, setIpfsHash] = useState("");

  const uploadCertificate = async () => {
    if (!ipfsHash) return alert("–í–≤–µ–¥–∏—Ç–µ IPFS Hash");

    // –°–æ–±–∏—Ä–∞–µ–º metadata. –ó–¥–µ—Å—å –ø—Ä–∏–º–µ—Ä —Å –ø—É—Å—Ç—ã–º –æ–±—ä–µ–∫—Ç–æ–º ‚Äì –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä—å—Ç–µ —Ñ–æ—Ä–º—É.
    const metadata = {};
    try {
      await issueCertificate(ipfsHash, metadata);
      toast.success("–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
    } catch (error) {
      console.error(error);
      toast.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞");
    }
  };

  return (
    <div className="p-4 bg-white shadow rounded">
      <h2 className="text-lg font-bold mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç</h2>
      <input
        type="text"
        placeholder="–í–≤–µ–¥–∏—Ç–µ IPFS Hash"
        value={ipfsHash}
        onChange={(e) => setIpfsHash(e.target.value)}
        className="w-full p-2 border rounded mb-2"
      />
      <button onClick={uploadCertificate} className="p-2 bg-green-500 text-white rounded">
        üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å
      </button>
    </div>
  );
}
