import React, { useState } from "react";
import { create } from "ipfs-http-client";
import { issueCertificate } from "../api/CertificateAPI";
import { useWallet } from "../context/WalletContext";


const ipfs = create({ url: "http://localhost:5001" }); // –£–±–µ–¥–∏—Å—å, —á—Ç–æ IPFS CLI —Ä–∞–±–æ—Ç–∞–µ—Ç

export default function UploadCertificate() {
  const { signer } = useWallet(); // üîë –ø–æ–ª—É—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π signer
  const [file, setFile] = useState<File | null>(null);
  const [isUploading, setIsUploading] = useState(false);

  const role = localStorage.getItem("role");
  if (role !== "Issuer") {
    return <p className="text-red-600 text-center mt-10">–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω —Ç–æ–ª—å–∫–æ Issuer-–∞–º</p>;
  }

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const selectedFile = event.target.files?.[0] || null;
    setFile(selectedFile);
  };

  const handleUpload = async () => {
    if (!signer || !file) return;

    const allowedTypes = ["application/pdf", "image/png", "image/jpeg"];
    if (!allowedTypes.includes(file.type)) {
      alert("‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã PDF, PNG –∏ JPEG.");
      return;
    }

    try {
      setIsUploading(true);
      console.log("üìÑ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:", file.name, file.type);

      const added = await ipfs.add(file);
      const ipfsHash = added.cid.toString();
      console.log("üåÄ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤ IPFS, CID:", ipfsHash);

      const metadata = {
        filename: file.name,
        issuer: "Decentralized University",
      };

      await issueCertificate(ipfsHash, metadata);
      alert("‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
      setFile(null); // —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∞–π–ª–∞
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:", error);
      alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ IPFS –∏ MetaMask.");
    } finally {
      setIsUploading(false);
    }
  };

  return (
      <div className="mt-8 w-full max-w-xl mx-auto bg-white p-6 rounded shadow">
        <h2 className="text-2xl font-semibold mb-4">üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç</h2>
        <input
            type="file"
            onChange={handleFileChange}
            className="block w-full border p-2 rounded mb-4"
        />
        <button
            onClick={handleUpload}
            disabled={!file || !signer || isUploading}
            className={`w-full px-4 py-2 rounded text-white transition ${
                isUploading
                    ? "bg-gray-400 cursor-not-allowed"
                    : "bg-blue-600 hover:bg-blue-700"
            }`}
        >
          {isUploading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"}
        </button>
      </div>
  );
}
