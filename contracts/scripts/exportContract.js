// contracts/scripts/exportContract.js
const fs = require("fs");
const path = require("path");

const CONTRACT_NAME = "Certificates";
const BUILD_PATH = path.resolve(__dirname, "../build/contracts", `${CONTRACT_NAME}.json`);
const OUTPUT_PATH = path.resolve(__dirname, "../../shared/contract.json"); // üîÅ –Ω–æ–≤—ã–π –ø—É—Ç—å

function exportContract() {
  if (!fs.existsSync(BUILD_PATH)) {
    console.error(`‚ùå –ö–æ–Ω—Ç—Ä–∞–∫—Ç ${CONTRACT_NAME}.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–ª –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ Truffle.`);
    process.exit(1);
  }

  const contractData = JSON.parse(fs.readFileSync(BUILD_PATH, "utf8"));

  const address =
    contractData.networks && Object.values(contractData.networks)[0]?.address;

  if (!address) {
    console.error("‚ùå –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª –∑–∞–¥–µ–ø–ª–æ–µ–Ω.");
    process.exit(1);
  }

  const output = {
    abi: contractData.abi,
    address: address,
  };

  fs.mkdirSync(path.dirname(OUTPUT_PATH), { recursive: true });
  fs.writeFileSync(OUTPUT_PATH, JSON.stringify(output, null, 2));

  console.log(`‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ shared/contract.json`);
  console.log(`‚Üí Address: ${address}`);
}

exportContract();
